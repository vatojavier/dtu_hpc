#!/bin/bash
# 02614 - High-Performance Computing, January 2022
# 
# batch script to run matmult on a decidated server in the hpcintro
# queue
#
# Author: Bernd Dammann <bd@cc.dtu.dk>
#
#BSUB -J g4_JASEQ_no_opt
#BSUB -o g4_JASEQ_no_opt%J.out
#BSUB -e g4_JASEQ_no_opt%J.err
#BSUB -q hpcintro
#BSUB -n 24
#BSUB -N
#BSUB -R "rusage[mem=2048]"
#BSUB -W 20
# uncomment the following line, if you want to assure that your job has
# a whole CPU for itself (shared L3 cache)
#BSUB -R "span[hosts=1] affinity[socket(1)]"

# define the executable to use
# valid values: poisson_j or poisson_gs
#

EXECUTABLE=poisson_gs

# define the resolution values
#
RESOLUTION="8 10 12 15 20 25 30 40 50 75 100 110 120 135 150"

# define the maximum number of iterations
#
MAXIT="20000"

# define tolerance
#
TOL="0.000005"

# define starting temperature in the room
# 
START_TEMP="0.0"

# define output type
#
OUT_TYPE="0"

# define experiment type: GS: 1-seq, 2-wrong, 3-Parallel
EXP_TYPE="3"

THREADS="2 4 8 12 16 20 24"


# Start doing an experiment
for R in $RESOLUTION
do
    if [ "$EXPERIMENT" != "1" ]; then
    for T in $THREADS
    do
        OMP_NUM_THREADS=$T ./$EXECUTABLE $R $MAXIT $TOL $START_TEMP $OUT_TYPE $EXP_TYPE
        echo "Resolution: $R, Threads: $T done"
    done
    else 
        ./$EXECUTABLE $R $MAXIT $TOL $START_TEMP $OUT_TYPE $EXP_TYPE
        echo "Resolution: $R secuencial done"
    fi
done
